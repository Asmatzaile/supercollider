CLASS:: DrawGrid
summary:: Draws grid lines on a UserView for plotting
categories:: GUI>Accessories
related:: Reference/plot, Classes/GridLines, Classes/Plotter, Classes/UserView

DESCRIPTION::
DrawGrid is used by Plotter to draw the grid lines on a graph. It can however
also be used to draw link::Classes/GridLines:: on any
link::Classes/UserView:: and could even be used to add grid lines to UserViews
behind sliders or in any GUI.

Note that DrawGrid does not hold any reference to the UserView but is meant to
have its .draw method called inside of the UserView's drawFunc.  It only needs
to know what bounds the grid lines should be drawn within and what the
horizontal and vertical GridLines are.


CLASSMETHODS::

METHOD:: new

argument:: bounds
The bounds describing the extents of the grid (not including any labels).
Multiple DrawGrid may be used to draw grids on a single
link::Classes/UserView::.

argument:: horzGrid
A link::Classes/GridLines::, link::Classes/BlankGridLines:: or GridLines
subclass.

argument:: vertGrid
A link::Classes/GridLines::, link::Classes/BlankGridLines:: or GridLines
subclass.

returns:: A DrawGrid.

METHOD:: test
For testing new link::Classes/GridLines:: objects.
code::
DrawGrid.test(\freq.asSpec.grid, \amp.asSpec.grid);
DrawGrid.test(nil, \lofreq.asSpec.grid);
::

argument:: horzGrid
A link::Classes/GridLines:: object or subclass.

argument:: vertGrid
A link::Classes/GridLines:: object or subclass.

argument:: bounds
Bounds describing the extents of the grid (not including any labels) within the
parent view. Can be a link::Classes/Point:: or link::Classes/Rect::.
Default: code::500 @ 400::.

returns:: A DrawGrid.


INSTANCEMETHODS::

METHOD:: draw
This draws to the currently active link::Classes/UserView::. This method is
meant to be called from inside the
link::Classes/UserView#-drawFunc#drawFunc:: of a UserView.

returns:: nil


METHOD:: horzGrid
Set the X axis grid lines.

argument:: g
A link::Classes/GridLines::.

returns:: Self.


METHOD:: vertGrid
Set the Y axis grid lines.

argument:: g
A link::Classes/GridLines::.

returns:: Self.


METHOD:: bounds
Get/set bounds describing the extents of the grid (not including any labels).

argument:: b
A link::Classes/Rect::.

returns:: A link::Classes/Rect::.


METHOD:: font
Get/set the font used by the grid lines labels.

argument:: f
A link::Classes/Font::.

returns:: A link::Classes/Font::.

METHOD:: fontColor
Get/set the font color.

argument:: c
A link::Classes/Color::.

returns:: A link::Classes/Color::.

METHOD:: gridColors
Set the colors of the grid lines for each axis.

argument:: colors
An link::Classes/Array:: of two colors for the x and y grid lines, respectively.

returns:: Self.

METHOD:: opacity
Get/set opacity.

returns:: A Float.

METHOD:: smoothing
A Boolean which turns on/off anti-aliasing. See link::Classes/Pen#*smoothing::.

returns:: A Boolean.

METHOD:: linePattern
Set the line dash pattern. pattern should be a link::Classes/FloatArray:: of
values that specify the lengths of the painted segments and not painted
segments. See link::Classes/Pen#*lineDash::.

returns:: Self.

METHOD:: x
A link::Classes/DrawGridX:: object that draws the x (horizontal) axis. In
general you shouldn't need to set this.

returns:: A link::Classes/DrawGridX::.

METHOD:: y
A link::Classes/DrawGridY:: object that draws the y (vertical) axis. In general
you shouldn't need to set this.

returns:: A link::Classes/DrawGridY::.


METHOD:: copy
Safely make a copy of this object and its working members.

returns:: A new link::Classes/DrawGrid::.


PRIVATE:: clearCache, init

EXAMPLES::

code::
(
w = Window.new.front;
u = UserView(w,w.bounds.size.asRect);

// the Spec can define its preferred grid system
x = \lofreq.asSpec.grid;
y = \amp.asSpec.grid;
d = DrawGrid(u.bounds.size.asRect.insetBy(20), x, y);

u.drawFunc = { d.draw };
u.resize_(5).onResize = { |u| d.bounds = u.bounds.size.asRect.insetBy(20) }
)
::
